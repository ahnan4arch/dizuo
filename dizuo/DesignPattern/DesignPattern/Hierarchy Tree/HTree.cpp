#include "HTree.hpp"
#include <iostream>

// ----------------------------------------------------------------
//  Name:           HTree::insertNode
//  Description:    给position指定的节点增加孩子节点，
//					data 为新增节点的data信息
//  Return Value:   返回的iterator指向刚插入的孩子节点位置
// ----------------------------------------------------------------
//	类外定义加上typename 否则iterator会被看做是HTree里面的静态成员
// ----------------------------------------------------------------


// ----------------------------------------------------------------
//	Name：			HTree::preTraverse
//	Description:	先序遍历多叉树
//					doSomething为操作
//					只有在类外面才能调用该函数
//	Return Value:	void
// ----------------------------------------------------------------


// ----------------------------------------------------------------
//	Name：			HTree::postTraverse
//	Description:	后续遍历多叉树
//	Return Value:	void
// ----------------------------------------------------------------


// ----------------------------------------------------------------
//	History:		增加了先序遍历的迭代器功能
//					operator++难点在于求取兄弟节点：
//						利用一个辅助数组栈，
//						以及parent_指针协助实现
//					end函数和STL中的稍有不同...
//					STL中采用了[begin, end)方式，e
//						nd节点是用NULL去构造的一个节点...
//	Time:			[4/10/2009 RenYaFei]
// ----------------------------------------------------------------

// ----------------------------------------------------------------
//	History:		seq_stack的栈大小代表层次树的深度，最大支持20层
//					这个栈用于辅助遍历多叉树
//					seq_stack : empty <==> top==0
//					栈为空的情况：1) 初始状态 , 2)全部遍历完
// ----------------------------------------------------------------
//					tree::end()只是做了一个标志return iterator(0)//
//					在operator++()遵守了一个同样的约定:			 //	
//					if(遍历完)									 //
//						node = 0; return *this;					 //
// ----------------------------------------------------------------
//	Time:		    [4/11/2009 RenYaFei]						 //
// ----------------------------------------------------------------

// ----------------------------------------------------------------
//	输出结构树：
/*
The HNode Tree :
  one
    two
      apple
      banana
      peach
    three
      china
      england
The Joint Tree :
  one
    two
      apple
      banana
      peach
    three
      china
      england
*/
// ----------------------------------------------------------------
